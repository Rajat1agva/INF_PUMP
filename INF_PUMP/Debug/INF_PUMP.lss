
INF_PUMP.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  00000910  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000089c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000037  00804000  00804000  00000910  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000910  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000940  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000980  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003dc7  00000000  00000000  00000a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002cf8  00000000  00000000  000047d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006a2  00000000  00000000  000074cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000019c  00000000  00000000  00007b74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001a43  00000000  00000000  00007d10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005e4  00000000  00000000  00009753  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00009d37  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__ctors_end>
   4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  10:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  14:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  18:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  1c:	0c 94 d4 01 	jmp	0x3a8	; 0x3a8 <__vector_7>
  20:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  28:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  30:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  34:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  38:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  3c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  40:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  44:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  48:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  4c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  50:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  54:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  58:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  5c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  60:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  64:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  68:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  6c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  70:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  74:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  78:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  7c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  80:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  84:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  88:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  8c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  90:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  94:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  98:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  9c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  ac:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  bc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  cc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  dc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  e0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  e4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>

000000e8 <__ctors_end>:
  e8:	11 24       	eor	r1, r1
  ea:	1f be       	out	0x3f, r1	; 63
  ec:	cf ef       	ldi	r28, 0xFF	; 255
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	df e7       	ldi	r29, 0x7F	; 127
  f2:	de bf       	out	0x3e, r29	; 62

000000f4 <__do_clear_bss>:
  f4:	20 e4       	ldi	r18, 0x40	; 64
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b0 e4       	ldi	r27, 0x40	; 64
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a7 33       	cpi	r26, 0x37	; 55
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	0e 94 66 01 	call	0x2cc	; 0x2cc <main>
 108:	0c 94 4c 04 	jmp	0x898	; 0x898 <_exit>

0000010c <__bad_interrupt>:
 10c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000110 <reverse>:
//}

void USART1_sendFloat(double val, int size)
{
	ftoa(val, buff, size);
	USART1_sendString(buff);
 110:	61 50       	subi	r22, 0x01	; 1
 112:	71 09       	sbc	r23, r1
 114:	20 e0       	ldi	r18, 0x00	; 0
 116:	30 e0       	ldi	r19, 0x00	; 0
 118:	0e c0       	rjmp	.+28     	; 0x136 <reverse+0x26>
 11a:	dc 01       	movw	r26, r24
 11c:	a2 0f       	add	r26, r18
 11e:	b3 1f       	adc	r27, r19
 120:	4c 91       	ld	r20, X
 122:	fc 01       	movw	r30, r24
 124:	e6 0f       	add	r30, r22
 126:	f7 1f       	adc	r31, r23
 128:	50 81       	ld	r21, Z
 12a:	5c 93       	st	X, r21
 12c:	40 83       	st	Z, r20
 12e:	2f 5f       	subi	r18, 0xFF	; 255
 130:	3f 4f       	sbci	r19, 0xFF	; 255
 132:	61 50       	subi	r22, 0x01	; 1
 134:	71 09       	sbc	r23, r1
 136:	26 17       	cp	r18, r22
 138:	37 07       	cpc	r19, r23
 13a:	7c f3       	brlt	.-34     	; 0x11a <reverse+0xa>
 13c:	08 95       	ret

0000013e <intToStr>:
 13e:	cf 92       	push	r12
 140:	df 92       	push	r13
 142:	ef 92       	push	r14
 144:	ff 92       	push	r15
 146:	0f 93       	push	r16
 148:	1f 93       	push	r17
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	8a 01       	movw	r16, r20
 150:	69 01       	movw	r12, r18
 152:	c0 e0       	ldi	r28, 0x00	; 0
 154:	d0 e0       	ldi	r29, 0x00	; 0
 156:	11 c0       	rjmp	.+34     	; 0x17a <intToStr+0x3c>
 158:	78 01       	movw	r14, r16
 15a:	ec 0e       	add	r14, r28
 15c:	fd 1e       	adc	r15, r29
 15e:	2a e0       	ldi	r18, 0x0A	; 10
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	40 e0       	ldi	r20, 0x00	; 0
 164:	50 e0       	ldi	r21, 0x00	; 0
 166:	0e 94 2d 04 	call	0x85a	; 0x85a <__divmodsi4>
 16a:	60 5d       	subi	r22, 0xD0	; 208
 16c:	f7 01       	movw	r30, r14
 16e:	60 83       	st	Z, r22
 170:	62 2f       	mov	r22, r18
 172:	73 2f       	mov	r23, r19
 174:	84 2f       	mov	r24, r20
 176:	95 2f       	mov	r25, r21
 178:	21 96       	adiw	r28, 0x01	; 1
 17a:	61 15       	cp	r22, r1
 17c:	71 05       	cpc	r23, r1
 17e:	81 05       	cpc	r24, r1
 180:	91 05       	cpc	r25, r1
 182:	51 f7       	brne	.-44     	; 0x158 <intToStr+0x1a>
 184:	06 c0       	rjmp	.+12     	; 0x192 <intToStr+0x54>
 186:	f8 01       	movw	r30, r16
 188:	ec 0f       	add	r30, r28
 18a:	fd 1f       	adc	r31, r29
 18c:	80 e3       	ldi	r24, 0x30	; 48
 18e:	80 83       	st	Z, r24
 190:	21 96       	adiw	r28, 0x01	; 1
 192:	cc 15       	cp	r28, r12
 194:	dd 05       	cpc	r29, r13
 196:	bc f3       	brlt	.-18     	; 0x186 <intToStr+0x48>
 198:	be 01       	movw	r22, r28
 19a:	c8 01       	movw	r24, r16
 19c:	0e 94 88 00 	call	0x110	; 0x110 <reverse>
 1a0:	f8 01       	movw	r30, r16
 1a2:	ec 0f       	add	r30, r28
 1a4:	fd 1f       	adc	r31, r29
 1a6:	10 82       	st	Z, r1
 1a8:	ce 01       	movw	r24, r28
 1aa:	df 91       	pop	r29
 1ac:	cf 91       	pop	r28
 1ae:	1f 91       	pop	r17
 1b0:	0f 91       	pop	r16
 1b2:	ff 90       	pop	r15
 1b4:	ef 90       	pop	r14
 1b6:	df 90       	pop	r13
 1b8:	cf 90       	pop	r12
 1ba:	08 95       	ret

000001bc <USART1_init>:
 1bc:	e0 e4       	ldi	r30, 0x40	; 64
 1be:	f4 e0       	ldi	r31, 0x04	; 4
 1c0:	20 81       	ld	r18, Z
 1c2:	2d 7f       	andi	r18, 0xFD	; 253
 1c4:	20 83       	st	Z, r18
 1c6:	20 81       	ld	r18, Z
 1c8:	21 60       	ori	r18, 0x01	; 1
 1ca:	20 83       	st	Z, r18
 1cc:	bc 01       	movw	r22, r24
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	0e 94 10 03 	call	0x620	; 0x620 <__floatunsisf>
 1d6:	20 e0       	ldi	r18, 0x00	; 0
 1d8:	30 e0       	ldi	r19, 0x00	; 0
 1da:	40 e8       	ldi	r20, 0x80	; 128
 1dc:	51 e4       	ldi	r21, 0x41	; 65
 1de:	0e 94 9e 03 	call	0x73c	; 0x73c <__mulsf3>
 1e2:	9b 01       	movw	r18, r22
 1e4:	ac 01       	movw	r20, r24
 1e6:	60 e0       	ldi	r22, 0x00	; 0
 1e8:	74 e2       	ldi	r23, 0x24	; 36
 1ea:	84 e7       	ldi	r24, 0x74	; 116
 1ec:	9d e4       	ldi	r25, 0x4D	; 77
 1ee:	0e 94 6f 02 	call	0x4de	; 0x4de <__divsf3>
 1f2:	20 e0       	ldi	r18, 0x00	; 0
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	40 e0       	ldi	r20, 0x00	; 0
 1f8:	5f e3       	ldi	r21, 0x3F	; 63
 1fa:	0e 94 03 02 	call	0x406	; 0x406 <__addsf3>
 1fe:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__fixunssfsi>
 202:	e0 e2       	ldi	r30, 0x20	; 32
 204:	f8 e0       	ldi	r31, 0x08	; 8
 206:	60 87       	std	Z+8, r22	; 0x08
 208:	71 87       	std	Z+9, r23	; 0x09
 20a:	86 81       	ldd	r24, Z+6	; 0x06
 20c:	80 6c       	ori	r24, 0xC0	; 192
 20e:	86 83       	std	Z+6, r24	; 0x06
 210:	08 95       	ret

00000212 <USART1_sendChar>:
 212:	90 91 24 08 	lds	r25, 0x0824	; 0x800824 <__TEXT_REGION_LENGTH__+0x7e0824>
 216:	95 ff       	sbrs	r25, 5
 218:	fc cf       	rjmp	.-8      	; 0x212 <USART1_sendChar>
 21a:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
 21e:	08 95       	ret

00000220 <USART1_sendString>:
 220:	0f 93       	push	r16
 222:	1f 93       	push	r17
 224:	cf 93       	push	r28
 226:	df 93       	push	r29
 228:	8c 01       	movw	r16, r24
 22a:	c0 e0       	ldi	r28, 0x00	; 0
 22c:	d0 e0       	ldi	r29, 0x00	; 0
 22e:	07 c0       	rjmp	.+14     	; 0x23e <USART1_sendString+0x1e>
 230:	f8 01       	movw	r30, r16
 232:	ec 0f       	add	r30, r28
 234:	fd 1f       	adc	r31, r29
 236:	80 81       	ld	r24, Z
 238:	0e 94 09 01 	call	0x212	; 0x212 <USART1_sendChar>
 23c:	21 96       	adiw	r28, 0x01	; 1
 23e:	f8 01       	movw	r30, r16
 240:	01 90       	ld	r0, Z+
 242:	00 20       	and	r0, r0
 244:	e9 f7       	brne	.-6      	; 0x240 <USART1_sendString+0x20>
 246:	31 97       	sbiw	r30, 0x01	; 1
 248:	e0 1b       	sub	r30, r16
 24a:	f1 0b       	sbc	r31, r17
 24c:	ce 17       	cp	r28, r30
 24e:	df 07       	cpc	r29, r31
 250:	78 f3       	brcs	.-34     	; 0x230 <USART1_sendString+0x10>
 252:	8a e0       	ldi	r24, 0x0A	; 10
 254:	0e 94 09 01 	call	0x212	; 0x212 <USART1_sendChar>
 258:	df 91       	pop	r29
 25a:	cf 91       	pop	r28
 25c:	1f 91       	pop	r17
 25e:	0f 91       	pop	r16
 260:	08 95       	ret

00000262 <USART1_sendInt>:
 262:	20 e0       	ldi	r18, 0x00	; 0
 264:	30 e0       	ldi	r19, 0x00	; 0
 266:	41 e0       	ldi	r20, 0x01	; 1
 268:	50 e4       	ldi	r21, 0x40	; 64
 26a:	0e 94 9f 00 	call	0x13e	; 0x13e <intToStr>
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	90 e4       	ldi	r25, 0x40	; 64
 272:	0e 94 10 01 	call	0x220	; 0x220 <USART1_sendString>
 276:	08 95       	ret

00000278 <ADC0_init>:


// ADC functions..
void ADC0_init(void)
{
	VREF.ADC0REF = 0x5 | (1 << 7);
 278:	85 e8       	ldi	r24, 0x85	; 133
 27a:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7e00a0>
	ADC0.CTRLC = ADC_PRESC_DIV256_gc;        /* CLK_PER divided by 4 */
 27e:	e0 e0       	ldi	r30, 0x00	; 0
 280:	f6 e0       	ldi	r31, 0x06	; 6
 282:	8d e0       	ldi	r24, 0x0D	; 13
 284:	82 83       	std	Z+2, r24	; 0x02
	ADC0.CTRLA = ADC_ENABLE_bm             /* ADC Enable: enabled */
 286:	85 e0       	ldi	r24, 0x05	; 5
 288:	80 83       	st	Z, r24
 28a:	08 95       	ret

0000028c <ADC0_start>:

/* This function starts the ADC conversions*/
void ADC0_start(void)
{
	/* Start ADC conversion */
	ADC0.COMMAND = ADC_STCONV_bm;
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
 292:	08 95       	ret

00000294 <ADC0_read>:
}

/* This function returns the ADC conversion result */
uint16_t ADC0_read(char pin)
{
	ADC0.MUXPOS = pin;
 294:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
	ADC0_start();
 298:	0e 94 46 01 	call	0x28c	; 0x28c <ADC0_start>
	/* Wait for ADC result to be ready */
	while (!(ADC0.INTFLAGS & ADC_RESRDY_bm));
 29c:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
 2a0:	80 ff       	sbrs	r24, 0
 2a2:	fc cf       	rjmp	.-8      	; 0x29c <ADC0_read+0x8>
	/* Clear the interrupt flag by reading the result */
	return ADC0.RES;
 2a4:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
 2a8:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
}
 2ac:	08 95       	ret

000002ae <timer_init>:
     }  
}

void timer_init()
{
	TCA0.SINGLE.CNT = 0;
 2ae:	e0 e0       	ldi	r30, 0x00	; 0
 2b0:	fa e0       	ldi	r31, 0x0A	; 10
 2b2:	10 a2       	std	Z+32, r1	; 0x20
 2b4:	11 a2       	std	Z+33, r1	; 0x21
	TCA0.SINGLE.PER = 100; //1 msec if prescaler is 64
 2b6:	84 e6       	ldi	r24, 0x64	; 100
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	86 a3       	std	Z+38, r24	; 0x26
 2bc:	97 a3       	std	Z+39, r25	; 0x27
	TCA0.SINGLE.CTRLA |= 0x0B; //Timer Enable 
 2be:	80 81       	ld	r24, Z
 2c0:	8b 60       	ori	r24, 0x0B	; 11
 2c2:	80 83       	st	Z, r24
	TCA0.SINGLE.INTCTRL |= (1<<0); //Ovf interrupt Enable
 2c4:	82 85       	ldd	r24, Z+10	; 0x0a
 2c6:	81 60       	ori	r24, 0x01	; 1
 2c8:	82 87       	std	Z+10, r24	; 0x0a
 2ca:	08 95       	ret

000002cc <main>:
bool state = false;
unsigned long int sensor_value;
void timer_init();

int main(void)
{   sei();
 2cc:	78 94       	sei
	Stepper1PORT.DIR |= Stepper1_direction_pin; // setting direction pin as a output
 2ce:	e0 e4       	ldi	r30, 0x40	; 64
 2d0:	f4 e0       	ldi	r31, 0x04	; 4
 2d2:	80 81       	ld	r24, Z
 2d4:	80 61       	ori	r24, 0x10	; 16
 2d6:	80 83       	st	Z, r24
	Stepper1PORT.DIR |= Stepper1_Step_pin;  //Setting step pin as a output
 2d8:	80 81       	ld	r24, Z
 2da:	88 60       	ori	r24, 0x08	; 8
 2dc:	80 83       	st	Z, r24
	PORTA.DIR |= (1<<4);
 2de:	e0 e0       	ldi	r30, 0x00	; 0
 2e0:	f4 e0       	ldi	r31, 0x04	; 4
 2e2:	80 81       	ld	r24, Z
 2e4:	80 61       	ori	r24, 0x10	; 16
 2e6:	80 83       	st	Z, r24
   // Stepper1PORT.OUTSET |= Stepper1_direction_pin;
    /* Replace with your application code */
    timer_init();
 2e8:	0e 94 57 01 	call	0x2ae	; 0x2ae <timer_init>
	USART1_init(9600);
 2ec:	80 e8       	ldi	r24, 0x80	; 128
 2ee:	95 e2       	ldi	r25, 0x25	; 37
 2f0:	0e 94 de 00 	call	0x1bc	; 0x1bc <USART1_init>
	ADC0_init();
 2f4:	0e 94 3c 01 	call	0x278	; 0x278 <ADC0_init>
	ADC0_start();
 2f8:	0e 94 46 01 	call	0x28c	; 0x28c <ADC0_start>
	while (1) 
    {   //_delay_ms(10);
		int i=200;
 2fc:	c8 ec       	ldi	r28, 0xC8	; 200
 2fe:	d0 e0       	ldi	r29, 0x00	; 0
		while(i)
 300:	18 c0       	rjmp	.+48     	; 0x332 <main+0x66>
		{
			sensor_value = ADC0_read(channel_1)+sensor_value;
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	0e 94 4a 01 	call	0x294	; 0x294 <ADC0_read>
 308:	40 91 33 40 	lds	r20, 0x4033	; 0x804033 <sensor_value>
 30c:	50 91 34 40 	lds	r21, 0x4034	; 0x804034 <sensor_value+0x1>
 310:	60 91 35 40 	lds	r22, 0x4035	; 0x804035 <sensor_value+0x2>
 314:	70 91 36 40 	lds	r23, 0x4036	; 0x804036 <sensor_value+0x3>
 318:	48 0f       	add	r20, r24
 31a:	59 1f       	adc	r21, r25
 31c:	61 1d       	adc	r22, r1
 31e:	71 1d       	adc	r23, r1
 320:	40 93 33 40 	sts	0x4033, r20	; 0x804033 <sensor_value>
 324:	50 93 34 40 	sts	0x4034, r21	; 0x804034 <sensor_value+0x1>
 328:	60 93 35 40 	sts	0x4035, r22	; 0x804035 <sensor_value+0x2>
 32c:	70 93 36 40 	sts	0x4036, r23	; 0x804036 <sensor_value+0x3>
			
			i--;
 330:	21 97       	sbiw	r28, 0x01	; 1
	ADC0_init();
	ADC0_start();
	while (1) 
    {   //_delay_ms(10);
		int i=200;
		while(i)
 332:	20 97       	sbiw	r28, 0x00	; 0
 334:	31 f7       	brne	.-52     	; 0x302 <main+0x36>
		{
			sensor_value = ADC0_read(channel_1)+sensor_value;
			
			i--;
		}
		sensor_value = sensor_value/200;
 336:	60 91 33 40 	lds	r22, 0x4033	; 0x804033 <sensor_value>
 33a:	70 91 34 40 	lds	r23, 0x4034	; 0x804034 <sensor_value+0x1>
 33e:	80 91 35 40 	lds	r24, 0x4035	; 0x804035 <sensor_value+0x2>
 342:	90 91 36 40 	lds	r25, 0x4036	; 0x804036 <sensor_value+0x3>
 346:	28 ec       	ldi	r18, 0xC8	; 200
 348:	30 e0       	ldi	r19, 0x00	; 0
 34a:	40 e0       	ldi	r20, 0x00	; 0
 34c:	50 e0       	ldi	r21, 0x00	; 0
 34e:	0e 94 0b 04 	call	0x816	; 0x816 <__udivmodsi4>
 352:	20 93 33 40 	sts	0x4033, r18	; 0x804033 <sensor_value>
 356:	30 93 34 40 	sts	0x4034, r19	; 0x804034 <sensor_value+0x1>
 35a:	40 93 35 40 	sts	0x4035, r20	; 0x804035 <sensor_value+0x2>
 35e:	50 93 36 40 	sts	0x4036, r21	; 0x804036 <sensor_value+0x3>
		USART1_sendInt(sensor_value);
 362:	ca 01       	movw	r24, r20
 364:	b9 01       	movw	r22, r18
 366:	0e 94 31 01 	call	0x262	; 0x262 <USART1_sendInt>
		 if(sensor_value <= 300)
 36a:	80 91 33 40 	lds	r24, 0x4033	; 0x804033 <sensor_value>
 36e:	90 91 34 40 	lds	r25, 0x4034	; 0x804034 <sensor_value+0x1>
 372:	a0 91 35 40 	lds	r26, 0x4035	; 0x804035 <sensor_value+0x2>
 376:	b0 91 36 40 	lds	r27, 0x4036	; 0x804036 <sensor_value+0x3>
 37a:	8d 32       	cpi	r24, 0x2D	; 45
 37c:	21 e0       	ldi	r18, 0x01	; 1
 37e:	92 07       	cpc	r25, r18
 380:	a1 05       	cpc	r26, r1
 382:	b1 05       	cpc	r27, r1
 384:	28 f4       	brcc	.+10     	; 0x390 <main+0xc4>
		 {
			 
			 PORTA.OUTSET |= (1<<4);
 386:	e0 e0       	ldi	r30, 0x00	; 0
 388:	f4 e0       	ldi	r31, 0x04	; 4
 38a:	25 81       	ldd	r18, Z+5	; 0x05
 38c:	20 61       	ori	r18, 0x10	; 16
 38e:	25 83       	std	Z+5, r18	; 0x05
		 }
		 if(sensor_value >= 900)
 390:	84 38       	cpi	r24, 0x84	; 132
 392:	93 40       	sbci	r25, 0x03	; 3
 394:	a1 05       	cpc	r26, r1
 396:	b1 05       	cpc	r27, r1
 398:	08 f4       	brcc	.+2      	; 0x39c <main+0xd0>
 39a:	b0 cf       	rjmp	.-160    	; 0x2fc <main+0x30>
		 {
			
			 PORTA.OUTCLR |= (1<<4);
 39c:	e0 e0       	ldi	r30, 0x00	; 0
 39e:	f4 e0       	ldi	r31, 0x04	; 4
 3a0:	86 81       	ldd	r24, Z+6	; 0x06
 3a2:	80 61       	ori	r24, 0x10	; 16
 3a4:	86 83       	std	Z+6, r24	; 0x06
 3a6:	aa cf       	rjmp	.-172    	; 0x2fc <main+0x30>

000003a8 <__vector_7>:
	TCA0.SINGLE.CTRLA |= 0x0B; //Timer Enable 
	TCA0.SINGLE.INTCTRL |= (1<<0); //Ovf interrupt Enable
}

ISR(TCA0_OVF_vect)
{  
 3a8:	1f 92       	push	r1
 3aa:	0f 92       	push	r0
 3ac:	0f b6       	in	r0, 0x3f	; 63
 3ae:	0f 92       	push	r0
 3b0:	11 24       	eor	r1, r1
 3b2:	0b b6       	in	r0, 0x3b	; 59
 3b4:	0f 92       	push	r0
 3b6:	8f 93       	push	r24
 3b8:	9f 93       	push	r25
 3ba:	ef 93       	push	r30
 3bc:	ff 93       	push	r31
	state=!state;
 3be:	90 91 00 40 	lds	r25, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	89 27       	eor	r24, r25
 3c6:	80 93 00 40 	sts	0x4000, r24	; 0x804000 <__DATA_REGION_ORIGIN__>
	if(state)
 3ca:	88 23       	and	r24, r24
 3cc:	31 f0       	breq	.+12     	; 0x3da <__vector_7+0x32>
	{
		Stepper1PORT.OUTSET |= Stepper1_Step_pin;
 3ce:	e0 e4       	ldi	r30, 0x40	; 64
 3d0:	f4 e0       	ldi	r31, 0x04	; 4
 3d2:	85 81       	ldd	r24, Z+5	; 0x05
 3d4:	88 60       	ori	r24, 0x08	; 8
 3d6:	85 83       	std	Z+5, r24	; 0x05
 3d8:	05 c0       	rjmp	.+10     	; 0x3e4 <__vector_7+0x3c>
		
	}
	else
	{
		
	    Stepper1PORT.OUTCLR |= Stepper1_Step_pin;	
 3da:	e0 e4       	ldi	r30, 0x40	; 64
 3dc:	f4 e0       	ldi	r31, 0x04	; 4
 3de:	86 81       	ldd	r24, Z+6	; 0x06
 3e0:	88 60       	ori	r24, 0x08	; 8
 3e2:	86 83       	std	Z+6, r24	; 0x06
	
	}
	TCA0.SINGLE.INTFLAGS |= (1<<0); 
 3e4:	e0 e0       	ldi	r30, 0x00	; 0
 3e6:	fa e0       	ldi	r31, 0x0A	; 10
 3e8:	83 85       	ldd	r24, Z+11	; 0x0b
 3ea:	81 60       	ori	r24, 0x01	; 1
 3ec:	83 87       	std	Z+11, r24	; 0x0b
	
 3ee:	ff 91       	pop	r31
 3f0:	ef 91       	pop	r30
 3f2:	9f 91       	pop	r25
 3f4:	8f 91       	pop	r24
 3f6:	0f 90       	pop	r0
 3f8:	0b be       	out	0x3b, r0	; 59
 3fa:	0f 90       	pop	r0
 3fc:	0f be       	out	0x3f, r0	; 63
 3fe:	0f 90       	pop	r0
 400:	1f 90       	pop	r1
 402:	18 95       	reti

00000404 <__subsf3>:
 404:	50 58       	subi	r21, 0x80	; 128

00000406 <__addsf3>:
 406:	bb 27       	eor	r27, r27
 408:	aa 27       	eor	r26, r26
 40a:	0e 94 1a 02 	call	0x434	; 0x434 <__addsf3x>
 40e:	0c 94 64 03 	jmp	0x6c8	; 0x6c8 <__fp_round>
 412:	0e 94 56 03 	call	0x6ac	; 0x6ac <__fp_pscA>
 416:	38 f0       	brcs	.+14     	; 0x426 <__addsf3+0x20>
 418:	0e 94 5d 03 	call	0x6ba	; 0x6ba <__fp_pscB>
 41c:	20 f0       	brcs	.+8      	; 0x426 <__addsf3+0x20>
 41e:	39 f4       	brne	.+14     	; 0x42e <__addsf3+0x28>
 420:	9f 3f       	cpi	r25, 0xFF	; 255
 422:	19 f4       	brne	.+6      	; 0x42a <__addsf3+0x24>
 424:	26 f4       	brtc	.+8      	; 0x42e <__addsf3+0x28>
 426:	0c 94 53 03 	jmp	0x6a6	; 0x6a6 <__fp_nan>
 42a:	0e f4       	brtc	.+2      	; 0x42e <__addsf3+0x28>
 42c:	e0 95       	com	r30
 42e:	e7 fb       	bst	r30, 7
 430:	0c 94 4d 03 	jmp	0x69a	; 0x69a <__fp_inf>

00000434 <__addsf3x>:
 434:	e9 2f       	mov	r30, r25
 436:	0e 94 75 03 	call	0x6ea	; 0x6ea <__fp_split3>
 43a:	58 f3       	brcs	.-42     	; 0x412 <__addsf3+0xc>
 43c:	ba 17       	cp	r27, r26
 43e:	62 07       	cpc	r22, r18
 440:	73 07       	cpc	r23, r19
 442:	84 07       	cpc	r24, r20
 444:	95 07       	cpc	r25, r21
 446:	20 f0       	brcs	.+8      	; 0x450 <__addsf3x+0x1c>
 448:	79 f4       	brne	.+30     	; 0x468 <__addsf3x+0x34>
 44a:	a6 f5       	brtc	.+104    	; 0x4b4 <__addsf3x+0x80>
 44c:	0c 94 97 03 	jmp	0x72e	; 0x72e <__fp_zero>
 450:	0e f4       	brtc	.+2      	; 0x454 <__addsf3x+0x20>
 452:	e0 95       	com	r30
 454:	0b 2e       	mov	r0, r27
 456:	ba 2f       	mov	r27, r26
 458:	a0 2d       	mov	r26, r0
 45a:	0b 01       	movw	r0, r22
 45c:	b9 01       	movw	r22, r18
 45e:	90 01       	movw	r18, r0
 460:	0c 01       	movw	r0, r24
 462:	ca 01       	movw	r24, r20
 464:	a0 01       	movw	r20, r0
 466:	11 24       	eor	r1, r1
 468:	ff 27       	eor	r31, r31
 46a:	59 1b       	sub	r21, r25
 46c:	99 f0       	breq	.+38     	; 0x494 <__addsf3x+0x60>
 46e:	59 3f       	cpi	r21, 0xF9	; 249
 470:	50 f4       	brcc	.+20     	; 0x486 <__addsf3x+0x52>
 472:	50 3e       	cpi	r21, 0xE0	; 224
 474:	68 f1       	brcs	.+90     	; 0x4d0 <__addsf3x+0x9c>
 476:	1a 16       	cp	r1, r26
 478:	f0 40       	sbci	r31, 0x00	; 0
 47a:	a2 2f       	mov	r26, r18
 47c:	23 2f       	mov	r18, r19
 47e:	34 2f       	mov	r19, r20
 480:	44 27       	eor	r20, r20
 482:	58 5f       	subi	r21, 0xF8	; 248
 484:	f3 cf       	rjmp	.-26     	; 0x46c <__addsf3x+0x38>
 486:	46 95       	lsr	r20
 488:	37 95       	ror	r19
 48a:	27 95       	ror	r18
 48c:	a7 95       	ror	r26
 48e:	f0 40       	sbci	r31, 0x00	; 0
 490:	53 95       	inc	r21
 492:	c9 f7       	brne	.-14     	; 0x486 <__addsf3x+0x52>
 494:	7e f4       	brtc	.+30     	; 0x4b4 <__addsf3x+0x80>
 496:	1f 16       	cp	r1, r31
 498:	ba 0b       	sbc	r27, r26
 49a:	62 0b       	sbc	r22, r18
 49c:	73 0b       	sbc	r23, r19
 49e:	84 0b       	sbc	r24, r20
 4a0:	ba f0       	brmi	.+46     	; 0x4d0 <__addsf3x+0x9c>
 4a2:	91 50       	subi	r25, 0x01	; 1
 4a4:	a1 f0       	breq	.+40     	; 0x4ce <__addsf3x+0x9a>
 4a6:	ff 0f       	add	r31, r31
 4a8:	bb 1f       	adc	r27, r27
 4aa:	66 1f       	adc	r22, r22
 4ac:	77 1f       	adc	r23, r23
 4ae:	88 1f       	adc	r24, r24
 4b0:	c2 f7       	brpl	.-16     	; 0x4a2 <__addsf3x+0x6e>
 4b2:	0e c0       	rjmp	.+28     	; 0x4d0 <__addsf3x+0x9c>
 4b4:	ba 0f       	add	r27, r26
 4b6:	62 1f       	adc	r22, r18
 4b8:	73 1f       	adc	r23, r19
 4ba:	84 1f       	adc	r24, r20
 4bc:	48 f4       	brcc	.+18     	; 0x4d0 <__addsf3x+0x9c>
 4be:	87 95       	ror	r24
 4c0:	77 95       	ror	r23
 4c2:	67 95       	ror	r22
 4c4:	b7 95       	ror	r27
 4c6:	f7 95       	ror	r31
 4c8:	9e 3f       	cpi	r25, 0xFE	; 254
 4ca:	08 f0       	brcs	.+2      	; 0x4ce <__addsf3x+0x9a>
 4cc:	b0 cf       	rjmp	.-160    	; 0x42e <__addsf3+0x28>
 4ce:	93 95       	inc	r25
 4d0:	88 0f       	add	r24, r24
 4d2:	08 f0       	brcs	.+2      	; 0x4d6 <__addsf3x+0xa2>
 4d4:	99 27       	eor	r25, r25
 4d6:	ee 0f       	add	r30, r30
 4d8:	97 95       	ror	r25
 4da:	87 95       	ror	r24
 4dc:	08 95       	ret

000004de <__divsf3>:
 4de:	0e 94 83 02 	call	0x506	; 0x506 <__divsf3x>
 4e2:	0c 94 64 03 	jmp	0x6c8	; 0x6c8 <__fp_round>
 4e6:	0e 94 5d 03 	call	0x6ba	; 0x6ba <__fp_pscB>
 4ea:	58 f0       	brcs	.+22     	; 0x502 <__divsf3+0x24>
 4ec:	0e 94 56 03 	call	0x6ac	; 0x6ac <__fp_pscA>
 4f0:	40 f0       	brcs	.+16     	; 0x502 <__divsf3+0x24>
 4f2:	29 f4       	brne	.+10     	; 0x4fe <__divsf3+0x20>
 4f4:	5f 3f       	cpi	r21, 0xFF	; 255
 4f6:	29 f0       	breq	.+10     	; 0x502 <__divsf3+0x24>
 4f8:	0c 94 4d 03 	jmp	0x69a	; 0x69a <__fp_inf>
 4fc:	51 11       	cpse	r21, r1
 4fe:	0c 94 98 03 	jmp	0x730	; 0x730 <__fp_szero>
 502:	0c 94 53 03 	jmp	0x6a6	; 0x6a6 <__fp_nan>

00000506 <__divsf3x>:
 506:	0e 94 75 03 	call	0x6ea	; 0x6ea <__fp_split3>
 50a:	68 f3       	brcs	.-38     	; 0x4e6 <__divsf3+0x8>

0000050c <__divsf3_pse>:
 50c:	99 23       	and	r25, r25
 50e:	b1 f3       	breq	.-20     	; 0x4fc <__divsf3+0x1e>
 510:	55 23       	and	r21, r21
 512:	91 f3       	breq	.-28     	; 0x4f8 <__divsf3+0x1a>
 514:	95 1b       	sub	r25, r21
 516:	55 0b       	sbc	r21, r21
 518:	bb 27       	eor	r27, r27
 51a:	aa 27       	eor	r26, r26
 51c:	62 17       	cp	r22, r18
 51e:	73 07       	cpc	r23, r19
 520:	84 07       	cpc	r24, r20
 522:	38 f0       	brcs	.+14     	; 0x532 <__divsf3_pse+0x26>
 524:	9f 5f       	subi	r25, 0xFF	; 255
 526:	5f 4f       	sbci	r21, 0xFF	; 255
 528:	22 0f       	add	r18, r18
 52a:	33 1f       	adc	r19, r19
 52c:	44 1f       	adc	r20, r20
 52e:	aa 1f       	adc	r26, r26
 530:	a9 f3       	breq	.-22     	; 0x51c <__divsf3_pse+0x10>
 532:	35 d0       	rcall	.+106    	; 0x59e <__divsf3_pse+0x92>
 534:	0e 2e       	mov	r0, r30
 536:	3a f0       	brmi	.+14     	; 0x546 <__divsf3_pse+0x3a>
 538:	e0 e8       	ldi	r30, 0x80	; 128
 53a:	32 d0       	rcall	.+100    	; 0x5a0 <__divsf3_pse+0x94>
 53c:	91 50       	subi	r25, 0x01	; 1
 53e:	50 40       	sbci	r21, 0x00	; 0
 540:	e6 95       	lsr	r30
 542:	00 1c       	adc	r0, r0
 544:	ca f7       	brpl	.-14     	; 0x538 <__divsf3_pse+0x2c>
 546:	2b d0       	rcall	.+86     	; 0x59e <__divsf3_pse+0x92>
 548:	fe 2f       	mov	r31, r30
 54a:	29 d0       	rcall	.+82     	; 0x59e <__divsf3_pse+0x92>
 54c:	66 0f       	add	r22, r22
 54e:	77 1f       	adc	r23, r23
 550:	88 1f       	adc	r24, r24
 552:	bb 1f       	adc	r27, r27
 554:	26 17       	cp	r18, r22
 556:	37 07       	cpc	r19, r23
 558:	48 07       	cpc	r20, r24
 55a:	ab 07       	cpc	r26, r27
 55c:	b0 e8       	ldi	r27, 0x80	; 128
 55e:	09 f0       	breq	.+2      	; 0x562 <__divsf3_pse+0x56>
 560:	bb 0b       	sbc	r27, r27
 562:	80 2d       	mov	r24, r0
 564:	bf 01       	movw	r22, r30
 566:	ff 27       	eor	r31, r31
 568:	93 58       	subi	r25, 0x83	; 131
 56a:	5f 4f       	sbci	r21, 0xFF	; 255
 56c:	3a f0       	brmi	.+14     	; 0x57c <__divsf3_pse+0x70>
 56e:	9e 3f       	cpi	r25, 0xFE	; 254
 570:	51 05       	cpc	r21, r1
 572:	78 f0       	brcs	.+30     	; 0x592 <__divsf3_pse+0x86>
 574:	0c 94 4d 03 	jmp	0x69a	; 0x69a <__fp_inf>
 578:	0c 94 98 03 	jmp	0x730	; 0x730 <__fp_szero>
 57c:	5f 3f       	cpi	r21, 0xFF	; 255
 57e:	e4 f3       	brlt	.-8      	; 0x578 <__divsf3_pse+0x6c>
 580:	98 3e       	cpi	r25, 0xE8	; 232
 582:	d4 f3       	brlt	.-12     	; 0x578 <__divsf3_pse+0x6c>
 584:	86 95       	lsr	r24
 586:	77 95       	ror	r23
 588:	67 95       	ror	r22
 58a:	b7 95       	ror	r27
 58c:	f7 95       	ror	r31
 58e:	9f 5f       	subi	r25, 0xFF	; 255
 590:	c9 f7       	brne	.-14     	; 0x584 <__divsf3_pse+0x78>
 592:	88 0f       	add	r24, r24
 594:	91 1d       	adc	r25, r1
 596:	96 95       	lsr	r25
 598:	87 95       	ror	r24
 59a:	97 f9       	bld	r25, 7
 59c:	08 95       	ret
 59e:	e1 e0       	ldi	r30, 0x01	; 1
 5a0:	66 0f       	add	r22, r22
 5a2:	77 1f       	adc	r23, r23
 5a4:	88 1f       	adc	r24, r24
 5a6:	bb 1f       	adc	r27, r27
 5a8:	62 17       	cp	r22, r18
 5aa:	73 07       	cpc	r23, r19
 5ac:	84 07       	cpc	r24, r20
 5ae:	ba 07       	cpc	r27, r26
 5b0:	20 f0       	brcs	.+8      	; 0x5ba <__divsf3_pse+0xae>
 5b2:	62 1b       	sub	r22, r18
 5b4:	73 0b       	sbc	r23, r19
 5b6:	84 0b       	sbc	r24, r20
 5b8:	ba 0b       	sbc	r27, r26
 5ba:	ee 1f       	adc	r30, r30
 5bc:	88 f7       	brcc	.-30     	; 0x5a0 <__divsf3_pse+0x94>
 5be:	e0 95       	com	r30
 5c0:	08 95       	ret

000005c2 <__fixunssfsi>:
 5c2:	0e 94 7d 03 	call	0x6fa	; 0x6fa <__fp_splitA>
 5c6:	88 f0       	brcs	.+34     	; 0x5ea <__fixunssfsi+0x28>
 5c8:	9f 57       	subi	r25, 0x7F	; 127
 5ca:	98 f0       	brcs	.+38     	; 0x5f2 <__fixunssfsi+0x30>
 5cc:	b9 2f       	mov	r27, r25
 5ce:	99 27       	eor	r25, r25
 5d0:	b7 51       	subi	r27, 0x17	; 23
 5d2:	b0 f0       	brcs	.+44     	; 0x600 <__fixunssfsi+0x3e>
 5d4:	e1 f0       	breq	.+56     	; 0x60e <__fixunssfsi+0x4c>
 5d6:	66 0f       	add	r22, r22
 5d8:	77 1f       	adc	r23, r23
 5da:	88 1f       	adc	r24, r24
 5dc:	99 1f       	adc	r25, r25
 5de:	1a f0       	brmi	.+6      	; 0x5e6 <__fixunssfsi+0x24>
 5e0:	ba 95       	dec	r27
 5e2:	c9 f7       	brne	.-14     	; 0x5d6 <__fixunssfsi+0x14>
 5e4:	14 c0       	rjmp	.+40     	; 0x60e <__fixunssfsi+0x4c>
 5e6:	b1 30       	cpi	r27, 0x01	; 1
 5e8:	91 f0       	breq	.+36     	; 0x60e <__fixunssfsi+0x4c>
 5ea:	0e 94 97 03 	call	0x72e	; 0x72e <__fp_zero>
 5ee:	b1 e0       	ldi	r27, 0x01	; 1
 5f0:	08 95       	ret
 5f2:	0c 94 97 03 	jmp	0x72e	; 0x72e <__fp_zero>
 5f6:	67 2f       	mov	r22, r23
 5f8:	78 2f       	mov	r23, r24
 5fa:	88 27       	eor	r24, r24
 5fc:	b8 5f       	subi	r27, 0xF8	; 248
 5fe:	39 f0       	breq	.+14     	; 0x60e <__fixunssfsi+0x4c>
 600:	b9 3f       	cpi	r27, 0xF9	; 249
 602:	cc f3       	brlt	.-14     	; 0x5f6 <__fixunssfsi+0x34>
 604:	86 95       	lsr	r24
 606:	77 95       	ror	r23
 608:	67 95       	ror	r22
 60a:	b3 95       	inc	r27
 60c:	d9 f7       	brne	.-10     	; 0x604 <__fixunssfsi+0x42>
 60e:	3e f4       	brtc	.+14     	; 0x61e <__fixunssfsi+0x5c>
 610:	90 95       	com	r25
 612:	80 95       	com	r24
 614:	70 95       	com	r23
 616:	61 95       	neg	r22
 618:	7f 4f       	sbci	r23, 0xFF	; 255
 61a:	8f 4f       	sbci	r24, 0xFF	; 255
 61c:	9f 4f       	sbci	r25, 0xFF	; 255
 61e:	08 95       	ret

00000620 <__floatunsisf>:
 620:	e8 94       	clt
 622:	09 c0       	rjmp	.+18     	; 0x636 <__floatsisf+0x12>

00000624 <__floatsisf>:
 624:	97 fb       	bst	r25, 7
 626:	3e f4       	brtc	.+14     	; 0x636 <__floatsisf+0x12>
 628:	90 95       	com	r25
 62a:	80 95       	com	r24
 62c:	70 95       	com	r23
 62e:	61 95       	neg	r22
 630:	7f 4f       	sbci	r23, 0xFF	; 255
 632:	8f 4f       	sbci	r24, 0xFF	; 255
 634:	9f 4f       	sbci	r25, 0xFF	; 255
 636:	99 23       	and	r25, r25
 638:	a9 f0       	breq	.+42     	; 0x664 <__floatsisf+0x40>
 63a:	f9 2f       	mov	r31, r25
 63c:	96 e9       	ldi	r25, 0x96	; 150
 63e:	bb 27       	eor	r27, r27
 640:	93 95       	inc	r25
 642:	f6 95       	lsr	r31
 644:	87 95       	ror	r24
 646:	77 95       	ror	r23
 648:	67 95       	ror	r22
 64a:	b7 95       	ror	r27
 64c:	f1 11       	cpse	r31, r1
 64e:	f8 cf       	rjmp	.-16     	; 0x640 <__floatsisf+0x1c>
 650:	fa f4       	brpl	.+62     	; 0x690 <__floatsisf+0x6c>
 652:	bb 0f       	add	r27, r27
 654:	11 f4       	brne	.+4      	; 0x65a <__floatsisf+0x36>
 656:	60 ff       	sbrs	r22, 0
 658:	1b c0       	rjmp	.+54     	; 0x690 <__floatsisf+0x6c>
 65a:	6f 5f       	subi	r22, 0xFF	; 255
 65c:	7f 4f       	sbci	r23, 0xFF	; 255
 65e:	8f 4f       	sbci	r24, 0xFF	; 255
 660:	9f 4f       	sbci	r25, 0xFF	; 255
 662:	16 c0       	rjmp	.+44     	; 0x690 <__floatsisf+0x6c>
 664:	88 23       	and	r24, r24
 666:	11 f0       	breq	.+4      	; 0x66c <__floatsisf+0x48>
 668:	96 e9       	ldi	r25, 0x96	; 150
 66a:	11 c0       	rjmp	.+34     	; 0x68e <__floatsisf+0x6a>
 66c:	77 23       	and	r23, r23
 66e:	21 f0       	breq	.+8      	; 0x678 <__floatsisf+0x54>
 670:	9e e8       	ldi	r25, 0x8E	; 142
 672:	87 2f       	mov	r24, r23
 674:	76 2f       	mov	r23, r22
 676:	05 c0       	rjmp	.+10     	; 0x682 <__floatsisf+0x5e>
 678:	66 23       	and	r22, r22
 67a:	71 f0       	breq	.+28     	; 0x698 <__floatsisf+0x74>
 67c:	96 e8       	ldi	r25, 0x86	; 134
 67e:	86 2f       	mov	r24, r22
 680:	70 e0       	ldi	r23, 0x00	; 0
 682:	60 e0       	ldi	r22, 0x00	; 0
 684:	2a f0       	brmi	.+10     	; 0x690 <__floatsisf+0x6c>
 686:	9a 95       	dec	r25
 688:	66 0f       	add	r22, r22
 68a:	77 1f       	adc	r23, r23
 68c:	88 1f       	adc	r24, r24
 68e:	da f7       	brpl	.-10     	; 0x686 <__floatsisf+0x62>
 690:	88 0f       	add	r24, r24
 692:	96 95       	lsr	r25
 694:	87 95       	ror	r24
 696:	97 f9       	bld	r25, 7
 698:	08 95       	ret

0000069a <__fp_inf>:
 69a:	97 f9       	bld	r25, 7
 69c:	9f 67       	ori	r25, 0x7F	; 127
 69e:	80 e8       	ldi	r24, 0x80	; 128
 6a0:	70 e0       	ldi	r23, 0x00	; 0
 6a2:	60 e0       	ldi	r22, 0x00	; 0
 6a4:	08 95       	ret

000006a6 <__fp_nan>:
 6a6:	9f ef       	ldi	r25, 0xFF	; 255
 6a8:	80 ec       	ldi	r24, 0xC0	; 192
 6aa:	08 95       	ret

000006ac <__fp_pscA>:
 6ac:	00 24       	eor	r0, r0
 6ae:	0a 94       	dec	r0
 6b0:	16 16       	cp	r1, r22
 6b2:	17 06       	cpc	r1, r23
 6b4:	18 06       	cpc	r1, r24
 6b6:	09 06       	cpc	r0, r25
 6b8:	08 95       	ret

000006ba <__fp_pscB>:
 6ba:	00 24       	eor	r0, r0
 6bc:	0a 94       	dec	r0
 6be:	12 16       	cp	r1, r18
 6c0:	13 06       	cpc	r1, r19
 6c2:	14 06       	cpc	r1, r20
 6c4:	05 06       	cpc	r0, r21
 6c6:	08 95       	ret

000006c8 <__fp_round>:
 6c8:	09 2e       	mov	r0, r25
 6ca:	03 94       	inc	r0
 6cc:	00 0c       	add	r0, r0
 6ce:	11 f4       	brne	.+4      	; 0x6d4 <__fp_round+0xc>
 6d0:	88 23       	and	r24, r24
 6d2:	52 f0       	brmi	.+20     	; 0x6e8 <__fp_round+0x20>
 6d4:	bb 0f       	add	r27, r27
 6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__fp_round+0x20>
 6d8:	bf 2b       	or	r27, r31
 6da:	11 f4       	brne	.+4      	; 0x6e0 <__fp_round+0x18>
 6dc:	60 ff       	sbrs	r22, 0
 6de:	04 c0       	rjmp	.+8      	; 0x6e8 <__fp_round+0x20>
 6e0:	6f 5f       	subi	r22, 0xFF	; 255
 6e2:	7f 4f       	sbci	r23, 0xFF	; 255
 6e4:	8f 4f       	sbci	r24, 0xFF	; 255
 6e6:	9f 4f       	sbci	r25, 0xFF	; 255
 6e8:	08 95       	ret

000006ea <__fp_split3>:
 6ea:	57 fd       	sbrc	r21, 7
 6ec:	90 58       	subi	r25, 0x80	; 128
 6ee:	44 0f       	add	r20, r20
 6f0:	55 1f       	adc	r21, r21
 6f2:	59 f0       	breq	.+22     	; 0x70a <__fp_splitA+0x10>
 6f4:	5f 3f       	cpi	r21, 0xFF	; 255
 6f6:	71 f0       	breq	.+28     	; 0x714 <__fp_splitA+0x1a>
 6f8:	47 95       	ror	r20

000006fa <__fp_splitA>:
 6fa:	88 0f       	add	r24, r24
 6fc:	97 fb       	bst	r25, 7
 6fe:	99 1f       	adc	r25, r25
 700:	61 f0       	breq	.+24     	; 0x71a <__fp_splitA+0x20>
 702:	9f 3f       	cpi	r25, 0xFF	; 255
 704:	79 f0       	breq	.+30     	; 0x724 <__fp_splitA+0x2a>
 706:	87 95       	ror	r24
 708:	08 95       	ret
 70a:	12 16       	cp	r1, r18
 70c:	13 06       	cpc	r1, r19
 70e:	14 06       	cpc	r1, r20
 710:	55 1f       	adc	r21, r21
 712:	f2 cf       	rjmp	.-28     	; 0x6f8 <__fp_split3+0xe>
 714:	46 95       	lsr	r20
 716:	f1 df       	rcall	.-30     	; 0x6fa <__fp_splitA>
 718:	08 c0       	rjmp	.+16     	; 0x72a <__fp_splitA+0x30>
 71a:	16 16       	cp	r1, r22
 71c:	17 06       	cpc	r1, r23
 71e:	18 06       	cpc	r1, r24
 720:	99 1f       	adc	r25, r25
 722:	f1 cf       	rjmp	.-30     	; 0x706 <__fp_splitA+0xc>
 724:	86 95       	lsr	r24
 726:	71 05       	cpc	r23, r1
 728:	61 05       	cpc	r22, r1
 72a:	08 94       	sec
 72c:	08 95       	ret

0000072e <__fp_zero>:
 72e:	e8 94       	clt

00000730 <__fp_szero>:
 730:	bb 27       	eor	r27, r27
 732:	66 27       	eor	r22, r22
 734:	77 27       	eor	r23, r23
 736:	cb 01       	movw	r24, r22
 738:	97 f9       	bld	r25, 7
 73a:	08 95       	ret

0000073c <__mulsf3>:
 73c:	0e 94 b1 03 	call	0x762	; 0x762 <__mulsf3x>
 740:	0c 94 64 03 	jmp	0x6c8	; 0x6c8 <__fp_round>
 744:	0e 94 56 03 	call	0x6ac	; 0x6ac <__fp_pscA>
 748:	38 f0       	brcs	.+14     	; 0x758 <__mulsf3+0x1c>
 74a:	0e 94 5d 03 	call	0x6ba	; 0x6ba <__fp_pscB>
 74e:	20 f0       	brcs	.+8      	; 0x758 <__mulsf3+0x1c>
 750:	95 23       	and	r25, r21
 752:	11 f0       	breq	.+4      	; 0x758 <__mulsf3+0x1c>
 754:	0c 94 4d 03 	jmp	0x69a	; 0x69a <__fp_inf>
 758:	0c 94 53 03 	jmp	0x6a6	; 0x6a6 <__fp_nan>
 75c:	11 24       	eor	r1, r1
 75e:	0c 94 98 03 	jmp	0x730	; 0x730 <__fp_szero>

00000762 <__mulsf3x>:
 762:	0e 94 75 03 	call	0x6ea	; 0x6ea <__fp_split3>
 766:	70 f3       	brcs	.-36     	; 0x744 <__mulsf3+0x8>

00000768 <__mulsf3_pse>:
 768:	95 9f       	mul	r25, r21
 76a:	c1 f3       	breq	.-16     	; 0x75c <__mulsf3+0x20>
 76c:	95 0f       	add	r25, r21
 76e:	50 e0       	ldi	r21, 0x00	; 0
 770:	55 1f       	adc	r21, r21
 772:	62 9f       	mul	r22, r18
 774:	f0 01       	movw	r30, r0
 776:	72 9f       	mul	r23, r18
 778:	bb 27       	eor	r27, r27
 77a:	f0 0d       	add	r31, r0
 77c:	b1 1d       	adc	r27, r1
 77e:	63 9f       	mul	r22, r19
 780:	aa 27       	eor	r26, r26
 782:	f0 0d       	add	r31, r0
 784:	b1 1d       	adc	r27, r1
 786:	aa 1f       	adc	r26, r26
 788:	64 9f       	mul	r22, r20
 78a:	66 27       	eor	r22, r22
 78c:	b0 0d       	add	r27, r0
 78e:	a1 1d       	adc	r26, r1
 790:	66 1f       	adc	r22, r22
 792:	82 9f       	mul	r24, r18
 794:	22 27       	eor	r18, r18
 796:	b0 0d       	add	r27, r0
 798:	a1 1d       	adc	r26, r1
 79a:	62 1f       	adc	r22, r18
 79c:	73 9f       	mul	r23, r19
 79e:	b0 0d       	add	r27, r0
 7a0:	a1 1d       	adc	r26, r1
 7a2:	62 1f       	adc	r22, r18
 7a4:	83 9f       	mul	r24, r19
 7a6:	a0 0d       	add	r26, r0
 7a8:	61 1d       	adc	r22, r1
 7aa:	22 1f       	adc	r18, r18
 7ac:	74 9f       	mul	r23, r20
 7ae:	33 27       	eor	r19, r19
 7b0:	a0 0d       	add	r26, r0
 7b2:	61 1d       	adc	r22, r1
 7b4:	23 1f       	adc	r18, r19
 7b6:	84 9f       	mul	r24, r20
 7b8:	60 0d       	add	r22, r0
 7ba:	21 1d       	adc	r18, r1
 7bc:	82 2f       	mov	r24, r18
 7be:	76 2f       	mov	r23, r22
 7c0:	6a 2f       	mov	r22, r26
 7c2:	11 24       	eor	r1, r1
 7c4:	9f 57       	subi	r25, 0x7F	; 127
 7c6:	50 40       	sbci	r21, 0x00	; 0
 7c8:	9a f0       	brmi	.+38     	; 0x7f0 <__mulsf3_pse+0x88>
 7ca:	f1 f0       	breq	.+60     	; 0x808 <__mulsf3_pse+0xa0>
 7cc:	88 23       	and	r24, r24
 7ce:	4a f0       	brmi	.+18     	; 0x7e2 <__mulsf3_pse+0x7a>
 7d0:	ee 0f       	add	r30, r30
 7d2:	ff 1f       	adc	r31, r31
 7d4:	bb 1f       	adc	r27, r27
 7d6:	66 1f       	adc	r22, r22
 7d8:	77 1f       	adc	r23, r23
 7da:	88 1f       	adc	r24, r24
 7dc:	91 50       	subi	r25, 0x01	; 1
 7de:	50 40       	sbci	r21, 0x00	; 0
 7e0:	a9 f7       	brne	.-22     	; 0x7cc <__mulsf3_pse+0x64>
 7e2:	9e 3f       	cpi	r25, 0xFE	; 254
 7e4:	51 05       	cpc	r21, r1
 7e6:	80 f0       	brcs	.+32     	; 0x808 <__mulsf3_pse+0xa0>
 7e8:	0c 94 4d 03 	jmp	0x69a	; 0x69a <__fp_inf>
 7ec:	0c 94 98 03 	jmp	0x730	; 0x730 <__fp_szero>
 7f0:	5f 3f       	cpi	r21, 0xFF	; 255
 7f2:	e4 f3       	brlt	.-8      	; 0x7ec <__mulsf3_pse+0x84>
 7f4:	98 3e       	cpi	r25, 0xE8	; 232
 7f6:	d4 f3       	brlt	.-12     	; 0x7ec <__mulsf3_pse+0x84>
 7f8:	86 95       	lsr	r24
 7fa:	77 95       	ror	r23
 7fc:	67 95       	ror	r22
 7fe:	b7 95       	ror	r27
 800:	f7 95       	ror	r31
 802:	e7 95       	ror	r30
 804:	9f 5f       	subi	r25, 0xFF	; 255
 806:	c1 f7       	brne	.-16     	; 0x7f8 <__mulsf3_pse+0x90>
 808:	fe 2b       	or	r31, r30
 80a:	88 0f       	add	r24, r24
 80c:	91 1d       	adc	r25, r1
 80e:	96 95       	lsr	r25
 810:	87 95       	ror	r24
 812:	97 f9       	bld	r25, 7
 814:	08 95       	ret

00000816 <__udivmodsi4>:
 816:	a1 e2       	ldi	r26, 0x21	; 33
 818:	1a 2e       	mov	r1, r26
 81a:	aa 1b       	sub	r26, r26
 81c:	bb 1b       	sub	r27, r27
 81e:	fd 01       	movw	r30, r26
 820:	0d c0       	rjmp	.+26     	; 0x83c <__udivmodsi4_ep>

00000822 <__udivmodsi4_loop>:
 822:	aa 1f       	adc	r26, r26
 824:	bb 1f       	adc	r27, r27
 826:	ee 1f       	adc	r30, r30
 828:	ff 1f       	adc	r31, r31
 82a:	a2 17       	cp	r26, r18
 82c:	b3 07       	cpc	r27, r19
 82e:	e4 07       	cpc	r30, r20
 830:	f5 07       	cpc	r31, r21
 832:	20 f0       	brcs	.+8      	; 0x83c <__udivmodsi4_ep>
 834:	a2 1b       	sub	r26, r18
 836:	b3 0b       	sbc	r27, r19
 838:	e4 0b       	sbc	r30, r20
 83a:	f5 0b       	sbc	r31, r21

0000083c <__udivmodsi4_ep>:
 83c:	66 1f       	adc	r22, r22
 83e:	77 1f       	adc	r23, r23
 840:	88 1f       	adc	r24, r24
 842:	99 1f       	adc	r25, r25
 844:	1a 94       	dec	r1
 846:	69 f7       	brne	.-38     	; 0x822 <__udivmodsi4_loop>
 848:	60 95       	com	r22
 84a:	70 95       	com	r23
 84c:	80 95       	com	r24
 84e:	90 95       	com	r25
 850:	9b 01       	movw	r18, r22
 852:	ac 01       	movw	r20, r24
 854:	bd 01       	movw	r22, r26
 856:	cf 01       	movw	r24, r30
 858:	08 95       	ret

0000085a <__divmodsi4>:
 85a:	05 2e       	mov	r0, r21
 85c:	97 fb       	bst	r25, 7
 85e:	1e f4       	brtc	.+6      	; 0x866 <__divmodsi4+0xc>
 860:	00 94       	com	r0
 862:	0e 94 44 04 	call	0x888	; 0x888 <__negsi2>
 866:	57 fd       	sbrc	r21, 7
 868:	07 d0       	rcall	.+14     	; 0x878 <__divmodsi4_neg2>
 86a:	0e 94 0b 04 	call	0x816	; 0x816 <__udivmodsi4>
 86e:	07 fc       	sbrc	r0, 7
 870:	03 d0       	rcall	.+6      	; 0x878 <__divmodsi4_neg2>
 872:	4e f4       	brtc	.+18     	; 0x886 <__divmodsi4_exit>
 874:	0c 94 44 04 	jmp	0x888	; 0x888 <__negsi2>

00000878 <__divmodsi4_neg2>:
 878:	50 95       	com	r21
 87a:	40 95       	com	r20
 87c:	30 95       	com	r19
 87e:	21 95       	neg	r18
 880:	3f 4f       	sbci	r19, 0xFF	; 255
 882:	4f 4f       	sbci	r20, 0xFF	; 255
 884:	5f 4f       	sbci	r21, 0xFF	; 255

00000886 <__divmodsi4_exit>:
 886:	08 95       	ret

00000888 <__negsi2>:
 888:	90 95       	com	r25
 88a:	80 95       	com	r24
 88c:	70 95       	com	r23
 88e:	61 95       	neg	r22
 890:	7f 4f       	sbci	r23, 0xFF	; 255
 892:	8f 4f       	sbci	r24, 0xFF	; 255
 894:	9f 4f       	sbci	r25, 0xFF	; 255
 896:	08 95       	ret

00000898 <_exit>:
 898:	f8 94       	cli

0000089a <__stop_program>:
 89a:	ff cf       	rjmp	.-2      	; 0x89a <__stop_program>
